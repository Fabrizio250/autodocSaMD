name: Generate Documentation

on:
  pull_request

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies from requirements.txt
        run: |
          # Cerca e installa le dipendenze dal file requirements.txt se esiste
          REQUIREMENTS_FILE=$(find . -name "requirements.txt")
          if [ -f "$REQUIREMENTS_FILE" ]; then
            echo "Found requirements.txt at $REQUIREMENTS_FILE"
            pip install -r "$REQUIREMENTS_FILE"
          else
            echo "No requirements.txt found"
          fi

      - name: Run main script
        run: |
          cd docs/maker_documentation
          python main.py

      - name: Update requirements.txt with any new dependencies
        run: |
          # Se esiste, aggiorna il file requirements.txt con tutte le dipendenze installate
          REQUIREMENTS_FILE=$(find . -name "requirements.txt")
          if [ -f "$REQUIREMENTS_FILE" ]; then
            echo "Saving current environment dependencies to $REQUIREMENTS_FILE"
            pip freeze > "$REQUIREMENTS_FILE"
          else
            # Se non esiste, crea il file requirements.txt nella root del progetto
            echo "Creating a new requirements.txt file"
            pip freeze > ./requirements.txt
          fi

      - name: Set up Git config
        run: |
          git config --global user.email "author_email"
          git config --global user.name "author_name"

      - name: Commit and push changes
        run: |
          # Aggiungi tutti i file modificati
          git add docs/md_docs/software-list.md
          git add docs/md_docs/soup-list.md

          # Aggiungi il requirements.txt se esiste
          REQUIREMENTS_FILE=$(find . -name "requirements.txt")
          if [ -f "$REQUIREMENTS_FILE" ]; then
            git add "$REQUIREMENTS_FILE"
          fi

          # Effettua il commit e push delle modifiche
          git commit -m 'Update documentation files and requirements.txt' || echo "No changes to commit"
          git push origin HEAD:${{ github.head_ref }} --force
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
