name: Generate Documentation

on:
  push:
    branches:
      - '**'  # Esegui il workflow su tutti i branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          cd docs/maker_documentation
          pip install -r requirements.txt

      - name: Run main script
        run: |
          cd docs/maker_documentation
          python main.py  # Esegui lo script che genera i file di documentazione

      - name: Verify generated files
        run: |
          cd docs/md_docs
          echo "Checking if software-list.md exists:"
          ls -l software-list.md  # Controlla se il file esiste
          echo "Checking if soup-list.md exists:"
          ls -l soup-list.md  # Controlla se il file esiste
          
      - name: Configure Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'

      - name: Add and commit documentation changes
        run: |
          cd docs
          git add --force md_docs/software-list.md md_docs/soup-list.md  # Forza l'aggiunta di questi file
          
          # Mostra lo stato per verificare che i file siano stati aggiunti correttamente
          git status

          # Verifica se ci sono cambiamenti nei file specifici
          git diff --cached --exit-code || git commit -m 'Update documentation files' || echo "No changes to commit"

          # Effettua il push delle modifiche solo se c'Ã¨ stato un commit
          git push origin HEAD:${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean up unwanted files
        run: |
          git clean -fdX  # Rimuove i file untracked come __pycache__
